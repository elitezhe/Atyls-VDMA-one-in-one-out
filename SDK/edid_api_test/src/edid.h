#ifndef __EDID_H_
#define __EDID_H_

#include "xiic.h"
#include "xparameters.h"
#include "xil_io.h"
#include "xintc.h"
/*
 * IIC device ID and Address
 * */
#define    IIC_IRPT_ID           XPAR_MICROBLAZE_0_INTC_AXI_IIC_0_IIC2INTC_IRPT_INTR
#define    IIC_BASEADDR          XPAR_IIC_0_BASEADDR
#define    IIC_DEVICE_ID         XPAR_AXI_IIC_0_DEVICE_ID
/*
 * IIC bit definitions
 */
#define bitAasFlag 0x00000020
#define bitTxEmptyFlag 0x00000004
#define bitTxDoneFlag 0x00000002
/*
 * IIC Register offsets
 */
#define bIicGIE 0x001C //Global Int Enable
#define bIicISR 0x0020 //Int status reg
#define bIicIER 0x0028 // int enable reg
#define bIicCR  0x0100 //control reg
#define bIicSR  0x0104 //status reg
#define bIicTX  0x0108 //Transmit FIFO
#define bIicRX  0x010C //Receive FIFO
#define bIicADR 0x0110 //Slave Addr
#define bIicTXOCY 0x0114 //Transmit FIFO Occupancy Reg
/*
 * EDID array definition. Changing these values changes the EDID
 * packet that is sent over the E-DDC wires. It contains information on which
 * resolutions the device supports. Currently, this packet provides fairly
 * generic resolution support. Note that using resolutions with widths larger
 * than the line stride of the hdmi_output core results in a choppy picture.
 */
static const u8 rgbEdid[256] =
{0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x11,0x27,0x00,0x00,0x00,0x00,0x00,0x00,
 0x2C,0x15,0x01,0x03,0x80,0x26,0x1E,0x78,0x2A,0xE5,0xC5,0xA4,0x56,0x4A,0x9C,0x23,
 0x12,0x50,0x54,0xBF,0xEF,0x80,0x8B,0xC0,0x95,0x00,0x95,0x0F,0x81,0x80,0x81,0x40,
 0x81,0xC0,0x71,0x4F,0x61,0x4F,0x6B,0x35,0xA0,0xF0,0x51,0x84,0x2A,0x30,0x60,0x98,
 0x36,0x00,0x78,0x2D,0x11,0x00,0x00,0x1C,0x00,0x00,0x00,0xFD,0x00,0x38,0x4B,0x1F,
 0x50,0x0E,0x0A,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x00,0x00,0x00,0xFC,0x00,0x41,
 0x54,0x4C,0x59,0x53,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x00,0x00,0x00,0xFE,
 0x00,0x44,0x49,0x47,0x49,0x4C,0x45,0x4E,0x54,0x52,0x4F,0x43,0x4B,0x53,0x00,0x12};

/*
 * Vars
 * */
volatile int ibEdid;
volatile int iicIntTimes; //count interrupt times

/*
 * Function
 * */
void IicHandler(void *CallBackRef); //Interrupt ISR
void EdidInit(XIntc* intCtrl);



#endif



